searchState.loadedDescShard("re_dataframe_ui", 0, "Rich table widget over <code>datafusion</code>.\nA handle to an object that is requested asynchronously.\nClosure used to determine the display name of the column.\nIntermediate data structures to make <code>re_datastore</code>’s row …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe blueprint used the first time the table is queried.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf provided, add a title UI on top of the table.\nIf provided and if <code>title</code> is set, add a button next to the …\nHelper struct to manage the datafusion async query and the …\nA table blueprint along with the context required to …\nThe subset of <code>TableBlueprint</code> that is actually handled by …\nThe current table blueprint\nMake sure we escape column names correctly for datafusion.\nExecute the query and produce a vector of <code>SorbetBatch</code>s.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieve the state from egui’s memory or create a new …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe query used to produce the dataframe.\nUpdate the query and save the state to egui’s memory.\nKeep track of the columns in a sorbet batch, indexed by id.\nNo value.\nSome value of type <code>T</code>.\nClears all caches related to this session context and …\nClosure used to determine the display name of the column.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe blueprint used the first time the table is queried.\nColumn index and descriptor from id\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf provided, add a title UI on top of the table.\nIf provided and if <code>title</code> is set, add a button next to the …\nWrapper over the arrow data of a component column.\nA single column of data in a record batch.\nData related to a single component column.\nDisplay some data in the column.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the number of instances for the given row index.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs this as <code>ArrowDataType::Null</code> column?\nCompute a quick partial hash of an image data buffer, …\nReturns the content at the given row index.\nTry to decode the time from the given row index.\nCreate a new <code>DisplayRecordBatch</code> from a <code>RecordBatch</code> and its …\nA handle to an object that is requested asynchronously.\nCreate a new <code>Self</code> with the given future.\nCreate a new <code>Self</code> with the given future and automatically …\nCheck if the future has completed and, if so, update our …\nGet a reference to the received object, if the request has …\nInformation required to generate a partition link column.\nThe “blueprint” for a table, a.k.a the specification …\nName of the column to generate.\nThe id of the dataset to use for the links.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOrigin to use for the links.\nName of the existing column containing the partition id.\nThis applies some fixes so that the column resize bar is …\nRemove the table config from the cache.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a table config, creating it if it doesn’t exist.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")