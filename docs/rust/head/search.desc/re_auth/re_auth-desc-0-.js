searchState.loadedDescShard("re_auth", 0, "Basic authentication helpers for Rerun.\nHandles errors for the <code>re_auth</code> crate.\nA JWT token that is used to authenticate the client.\nA secret key that is used to generate and verify tokens.\nThe audience of the token, i.e. who should consume it.\nExpiry time of the token.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIssued at time of the token.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe issuer of the token.\nThis module contains auth middleware for <code>tonic</code> services.\nThe subject (user) of the token.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHandles errors for the <code>re_auth</code> crate.\nIdentifies who should be the consumer of a token. In our …\nA secret key that is used to generate and verify tokens.\nThe audience of the token, i.e. who should consume it.\nExpiry time of the token.\nDecodes a <code>base64</code> encoded secret key.\nGenerates a new secret key.\nIssued at time of the token.\nThe issuer of the token.\nThe subject (user) of the token.\nEncodes the secret key as a <code>base64</code> string.\nGenerates a new JWT token that is valid for the given …\nChecks if a provided <code>token</code> is valid for a given <code>scope</code>.\nA basic authenticator that checks for a valid auth token.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe metadata key used in the metadata of the gRPC request …\nThe prefix for the token in the metadata of the gRPC …\nA basic authenticator that checks for a valid auth token.\nCreates a new <code>Authenticator</code> with the given secret key and …\nA JWT token that is used to authenticate the client.")